---
import Header from "~/components/Header.astro";
import Prose from "~/components/Prose.astro";

import BasePage from "~/layouts/BasePage.astro";

import IssueList from "~/components/IssueList/IssueList.astro";
import IssueCard from "~/components/IssueList/IssueCard.astro";
import IssueTitle from "~/components/IssueList/IssueTitle.astro";
import IssueNumber from "~/components/IssueList/IssueNumber.astro";
import IssueArrow from "~/components/IssueList/IssueArrow.astro";

import formatIssueNumber from "~/utils/formatIssueNumber";

import { getCollection, type CollectionEntry, render } from "astro:content";

export interface Props {
  entry: CollectionEntry<"newsletter">;
}

// Generate paths for all the issues in the newsletter collection
export async function getStaticPaths() {
  const newsletterIssues = await getCollection("newsletter");

  return newsletterIssues.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}

// Get the static entry for the current issue
const { entry } = Astro.props;

// Get the last three issues, excluding the current issue
const allIssues = await getCollection("newsletter");
const issues = allIssues.sort((a, b) => {
  const dateA = new Date(a.data.date);
  const dateB = new Date(b.data.date);

  return dateB.getTime() - dateA.getTime();
});

const lastIssues = issues.filter((issue) => issue.id !== entry.id).slice(0, 5);

// Render the markdown content
const { Content } = await render(entry);
---

<BasePage
  slug={entry.id}
  title={`${entry.data.title} – Node Zebra Newsletter – DEPT®`}
  description={entry.data.tagline}
  date={entry.data.date}
>
  <Header>
    <h1>{entry.data.title}</h1>
    <p>{entry.data.tagline}</p>
  </Header>

  <Prose>
    <Content />
  </Prose>

  <IssueList title="Read more">
    {
      lastIssues.map((issue) => (
        <IssueCard href={`/newsletter/${issue.id}`}>
          <IssueNumber>{formatIssueNumber(issue.id)}</IssueNumber>
          <IssueTitle>{issue.data.tagline}</IssueTitle>
          <IssueArrow>→</IssueArrow>
        </IssueCard>
      ))
    }
  </IssueList>
</BasePage>
